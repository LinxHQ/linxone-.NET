@using linxOne.ViewModel.Common
@model PageViewModel<linxOne.ViewModels.Customer.DataTransferObject.CustomerViewRequest>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*@section Scripts{
        <script>
            setTimeout(function () {
                $('#msgAlert').fadeOut('slow');
            }, 2000);
        </script>
    }*@


<div class="container-fluid">
    <h1 class="mt-4">List Customer</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item active">List Customer</li>
    </ol>
    <div class="card mb-12" style="width:100%">
        <div class="card-header">
            <div class="row">
                <div class="col-md-7 col-xs-7">
                    <a class="btn btn-success" asp-action="Create" asp-controller="Customer">Create New</a>
                </div>
                <div class="col-md-5 col-xs-5">
                    <form asp-action="Index" method="get">
                        <div class="row">
                            <div class="col-md-8">
                                <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
                            </div>
                            <div class="cold-md-4">
                                <button type="submit" class="btn btn-primary">Search</button>
                                <button type="button" onclick="window.location.href='/Customer/Index'" class="btn btn-dark">Reset</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="row">
                @if (ViewBag.SuccessMsg != null)
                {
                    <div id="msgAlert" class="alert alert-success" role="alert">
                        @ViewBag.SuccessMsg
                    </div>
                }
            </div>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Customer Name</th>
                            <th>Registration </th>
                            <th>CustomerType</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.id)</td>
                                <td>@Html.DisplayFor(modelItem => item.name)</td>
                                <td>@Html.DisplayFor(modelItem => item.registration)</td>
                                <td>@Html.DisplayFor(modelItem => item.cus_type)</td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                                    @Html.ActionLink("Detail", "Details", new { id = item.id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.id })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @await Component.InvokeAsync("Pager",Model)
        </div>
    </div>
</div>